(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{731:function(e,a,s){"use strict";s.r(a);var r=s(70),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"versionando-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#versionando-api"}},[e._v("#")]),e._v(" Versionando API")]),e._v(" "),s("p",[e._v("Antes de liberar tu REST API, deberias considerar el cómo manejar las "),s("strong",[e._v("versiones")]),e._v(", porque no tienes garantia de que todos tus usuarios manejaran las versiones actualizadas del API.")]),e._v(" "),s("p",[e._v("Por ejemplo, imagina que publicas una app en la play store con un API ("),s("strong",[e._v("v1")]),e._v("). En el siguiente lanzamiento de tu API ("),s("strong",[e._v("v2")]),e._v(") la cual usaras en tu sitio web, cambias una de las llamadas URI y la respuesta del formato. Entonces si no es compatible con las nuevas versiones, tu aplicación va a "),s("em",[e._v("crashear")]),e._v(" hasta que actualices la app con la nueva versión de la API.")]),e._v(" "),s("p",[e._v("Ahora que sabes las razones detras del versionado, veamos como se debería realizar.")]),e._v(" "),s("p",[e._v("La manera más común de versionar un API es incluir el "),s("strong",[e._v("número de versión")]),e._v(" in cada "),s("strong",[e._v("URL")]),e._v(". Por ejemplo:")]),e._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:""}},[e._v("http://api.example.com/v1/users/")])])]),e._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:""}},[e._v("http://api.example/v2.1/users/{id}/projects/{id}/run")])])]),e._v(" "),s("p",[e._v("De esta manera la estructura y las vesiones son correctas en la URL, y es fácil de usar.")]),e._v(" "),s("p",[e._v("El otro enfoque es incluir la versión en el "),s("strong",[e._v("encabezado del HTTP")]),e._v(". Si usas este enfoque, deberias ser capaz de manejar la solicitud donde la versión se pierde y no esta visible en la URL.")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTA")]),e._v(" "),s("p",[e._v("Existen otros tipos de enfoques donde el versionado es opcional, y si una versión no esta especificada, obtendrá automaticamente la ultima versión.")]),e._v(" "),s("p",[e._v("El inconveniente de estos enfoques es que los desarrolladores deben actuar inmediatamente a actualizar las apps para no romper la experiencia.")])]),e._v(" "),s("p",[e._v("Otra manera para versionar la API es manejar por separado cada plataforma. Digamos que tienes Android, IOS, y aplicaciones web y se comportan diferente. Tu puedes crear diferentes versiones del API para optimizar cada plataforma por separado:")]),e._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:""}},[e._v("http://api.example.com/a-v5/codes/{id}")])]),e._v(" "),s("p",[s("a",{attrs:{href:""}},[e._v("http://api.example.com/i-v4/codes/{id}")])]),e._v(" "),s("p",[s("a",{attrs:{href:""}},[e._v("http://api.example.com/w-v16/codes/{id}")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);