(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{759:function(e,t,s){"use strict";s.r(t);var r=s(70),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"resource-naming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resource-naming"}},[e._v("#")]),e._v(" Resource Naming")]),e._v(" "),s("p",[e._v("It is important to follow "),s("strong",[e._v("naming")]),e._v(" "),s("strong",[e._v("conventions")]),e._v(" to make your REST API look professional, readable and esay to use. You should treat resources as a "),s("strong",[e._v("thing(noun)")]),e._v(" instead of an "),s("strong",[e._v("action")]),e._v(" "),s("strong",[e._v("(verb)")]),e._v(". The main reason is that nouns have properties but verbs don't. Let's see some example of resources:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("http://api.example.com/users/\nhttp://api.example.com/users/{id}\n")])])]),s("blockquote",[s("p",[e._v("Use nouns instead of verbs to represent resources.")])]),e._v(" "),s("p",[e._v("To simplify this further, let's discuss 4 different types of resources, which will help you to choose a correct naming convention for your API.")]),e._v(" "),s("h5",{attrs:{id:"document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[e._v("#")]),e._v(" Document")]),e._v(" "),s("p",[e._v('This type of resource is a singular concept(object). In REST API, you can view (get) it as a single resource inside the collection. Use "singular" name to imply '),s("strong",[e._v("document")]),e._v(" resource type.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("http://api.example.com/users/{id}\nhttp;//api.example.com/users/{id}/posts\n")])])]),s("h5",{attrs:{id:"store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[e._v("#")]),e._v(" Store")]),e._v(" "),s("p",[e._v('A store resource is a directory in which a user(client) decides when to add or remove from there. Use a "plural" name to imply a '),s("strong",[e._v("store")]),e._v(" resource type.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("http://api.example.com/users/{id}/projects\nhttp;//api.example.com/users/{id}/playlists\n")])])]),s("h5",{attrs:{id:"controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[e._v("#")]),e._v(" Controller")]),e._v(" "),s("p",[e._v('A controller resource is an action concept. Controller resources act like functions which may take parameters as an input and return an output. Use a "verb" to imply a  '),s("strong",[e._v("controller")]),e._v(" resource type.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("http://api.example.com/users/{id}/projects/run\nhttp;//api.example.com/users/{id}/playlists/play\n")])])]),s("blockquote",[s("p",[e._v("Follow best practices in order to design easy to use API.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);